#!/bin/bash

#####################################################################
#                                                                   #
#    Generates an API for Android or iOS based on a Faust object    #
#               (c) Allen and Grame, 2017                           #
#                                                                   #
#####################################################################

# change if you want to get the log of what's happening
LOG="/dev/null"
#LOG="log"

# exit if a command fails
set -e

# global option variables
ANDROID="0"
IOS="0"
IOSMOTION="0"
ANDROIDMOTION="0"
IOSPLUGIN="0"
ANDROIDPLUGIN="0"
NVOICES="0"
#PACKAGENAME="0"
POLY2="0"
MIDI="0"
NODOC="0"
EFFECT=""
OPTIONS=""

OSCCTRL="0"
OSCMODE="1"
SOUNDFILE="0"


echoHelp ()
{
    echo "$p wrong argument"
    echo ""
    echo "faust2api_a can be used to generate faust-based dsp objects for iOS and Android."
    echo "To generate an iOS API, run: faust2api_a -ios yourFaustCode.dsp"
    echo "To generate and Android API, run: faust2api_a -android yourFaustCode.dsp"
    echo ""
    echo "GLOBAL OPTIONS:"
    echo "   -nvoices N : creates a polyphonic object with N voices."
    echo "   -effect <effect.dsp>: adds an effect to the polyphonic synth (this option is ignored if -nvoices is not specified)."
	  echo "   -nodoc : prevents documentation from being generated."
    echo ""
    echo "ANDROID-SPECIFIC OPTIONS:"
    echo "   -package : set the JAVA package name (e.g. '-package mypackage' will change the JAVA package name to 'mypackage.DspFaust'). The default package name is 'com.DspFaust.'"
    echo "   -oscall/-oscalias : add osc support to the API."
    echo "   -soundfile : add soundfile support to the API."
    echo "   -androidmotion : generate app with motion support."
    echo "   -androidplugin : generate faustplugin support."
    echo ""
    echo "IOS-SPECIFIC OPTIONS "
    echo "   -midi : add built-in RtMidi support to the API."
    echo "   -oscall/-oscalias: add osc support to the API.(all / alias)"
    echo "   -soundfile : add soundfile support to the API."
    echo "   -iosmotion : generate app with motion support."
    echo "   -iosplugin : generate faustplugin support."
}

# dispatch command arguments
while [ $1 ]
do
	p=$1

    if [ $p = "-help" ]; then
	     echoHelp
  elif [ "$PACKAGENAME" = "-1" ]; then
		PACKAGENAME="$p"
  elif [ "$p" = "-soundfile" ]; then
    SOUNDFILE="1"
	elif [ $p = "-oscall" ]; then
        OSCCTRL="1"
        OSCMODE="1"
  elif [ $p = "-oscalias" ]; then
        OSCCTRL="1"
        OSCMODE="2"
  elif [ $p = "-android" ]; then
		ANDROID=1
  elif [ $p = "-ios" ]; then
		IOS="1"
	elif [ $p = "-iosmotion" ]; then
		IOSMOTION="1"
	elif [ $p = "-androidmotion" ]; then
		ANDROIDMOTION="1"
  elif [ $p = "-iosplugin" ]; then
    IOSPLUGIN="1"
  elif [ $p = "-androidplugin" ]; then
    ANDROIDPLUGIN="1"
    elif [ "$p" = "-effect" ]; then
        POLY2="1"
		shift
		EFFECT=$1
    elif [ "$p" = "-midi" ]; then
        MIDI="1"
	elif [ "$p" = "-nodoc" ]; then
		NODOC="1"
    elif [ $p = "-nvoices" ]; then
		shift
		NVOICES=$1
    elif [ $p = "-package" ]; then
	     PACKAGENAME="-1"
  elif [ [${p:0:1} = "-"] ]; then
    OPTIONS="$OPTIONS $p"
  elif [[ -f "$p" ]]; then
    FILE="$p"
  else
    OPTIONS="$OPTIONS $p"
fi

shift

done

if [ -z $FILE ]; then
    echo "Please, provide a Faust file to process"
    exit
fi

###################################
# GENERATING API
###################################

APIFOLDER="dsp-faust"
	PLATFORM=$(uname)
  APPNAME=$(basename "$FILE")
  APPNAME="${APPNAME%.dsp}"

rm -r "$APIFOLDER" 2> /dev/null || true
mkdir "$APIFOLDER"

if [ $ANDROID -eq 1 ]; then
    echo "Your dsp-faust.zip API package for Android is being created"
    CPPFOLDER="$APIFOLDER/cpp"
    JAVAFOLDER="$APIFOLDER/java"
    mkdir $CPPFOLDER
    mkdir $JAVAFOLDER
    cp -r /usr/local/share/faust/api-allen/simple/android/jni/*.java $JAVAFOLDER
    if [ -n "$PACKAGENAME" ]; then
	PACKAGENAME="$PACKAGENAME.DspFaust"
	sed -i "s/com.DspFaust/$PACKAGENAME/g" $JAVAFOLDER/*.java
    fi
    cp -r /usr/local/share/faust/api-allen/simple/DspFaust.h $CPPFOLDER
    cp -r /usr/local/share/faust/api-allen/simple/android/jni/java_interface_wrap.cpp $CPPFOLDER
    if [ "$POLY2" = "1" ]; then
	faust $OPTIONS -i -cn effect -a minimal-effect.cpp $EFFECT | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp" || exit
	echo "#define POLY2 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    fi
    if [ "$NVOICES" -gt "0" ]; then
	echo "#define NVOICES $NVOICES" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    fi
    if [ "$OSCCTRL" = "1" ]; then
    faust $OPTIONS -i -a api-allen/simple/DspFaust.cpp "$FILE" -o "$CPPFOLDER/DspFaust.cpp" || exit
    echo "#define OSCCTRL 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
       if [ "$OSCMODE" = "2" ]; then
    echo "#define OSCALIAS 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
       elif [ "$OSCMODE" = "1" ]; then
    echo "#define OSCALL 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
       fi
       if [ "$SOUNDFILE" = "1" ]; then
    echo "#define SOUNDFILE 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    if [ $PLATFORM = "Darwin" ]; then
      sed -i '' 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
    else
      sed -i 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
    fi
       fi
    echo "#define ANDROID_DRIVER 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    else
    faust $OPTIONS -i -a api-allen/simple/DspFaust.cpp "$FILE" -o "$CPPFOLDER/DspFaust.cpp" || exit
    if [ "$SOUNDFILE" = "1" ]; then
 echo "#define SOUNDFILE 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
 if [ $PLATFORM = "Darwin" ]; then
   sed -i '' 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
 else
   sed -i 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
 fi
    fi
    echo "#define ANDROID_DRIVER 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"

    fi

elif [ $ANDROIDMOTION -eq 1 ]; then
    echo "Your dsp-faust.zip API package for Android Motion support is being created"
    CPPFOLDER="$APIFOLDER/cpp"
    JAVAFOLDER="$APIFOLDER/java"
    mkdir $CPPFOLDER
    mkdir $JAVAFOLDER
    cp -r /usr/local/share/faust/api-allen/motion/android/jni/*.java $JAVAFOLDER
    if [ -n "$PACKAGENAME" ]; then
	PACKAGENAME="$PACKAGENAME.DspFaust"
	sed -i "s/com.DspFaust/$PACKAGENAME/g" $JAVAFOLDER/*.java
    fi
    cp -r /usr/local/share/faust/api-allen/motion/DspFaust.h $CPPFOLDER
    cp -r /usr/local/share/faust/api-allen/motion/android/jni/java_interface_wrap.cpp $CPPFOLDER
    if [ "$OSCCTRL" = "1" ]; then
    faust $OPTIONS -i -a api-allen/motion/DspFaust.cpp "$FILE" -o "$CPPFOLDER/DspFaust.cpp" || exit
    echo "#define OSCCTRL 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    if [ "$OSCMODE" = "2" ]; then
 echo "#define OSCALIAS 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    elif [ "$OSCMODE" = "1" ]; then
 echo "#define OSCALL 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    fi
    if [ "$SOUNDFILE" = "1" ]; then
 echo "#define SOUNDFILE 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
 if [ $PLATFORM = "Darwin" ]; then
   sed -i '' 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
 else
   sed -i 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
 fi
    fi
    echo "#define ANDROID_DRIVER 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    else
    faust $OPTIONS -i -a api-allen/motion/DspFaust.cpp "$FILE" -o "$CPPFOLDER/DspFaust.cpp" || exit
    if [ "$SOUNDFILE" = "1" ]; then
 echo "#define SOUNDFILE 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
 if [ $PLATFORM = "Darwin" ]; then
   sed -i '' 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
 else
   sed -i 's,__CURRENT_ANDROID_PACKAGE__,com.'$APPNAME',g' $CPPFOLDER/DspFaust.cpp
 fi
    fi
    echo "#define ANDROID_DRIVER 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
    fi

elif [ $ANDROIDPLUGIN -eq 1 ]; then
      echo "Your dsp-faust.zip API package for Android Plugin support is being created"
      CPPFOLDER="$APIFOLDER/cpp"
      JAVAFOLDER="$APIFOLDER/java"
      mkdir $CPPFOLDER
      mkdir $JAVAFOLDER
      cp -r /usr/local/share/faust/api-allen/plugin/android/jni/*.java $JAVAFOLDER
      if [ -n "$PACKAGENAME" ]; then
  	PACKAGENAME="$PACKAGENAME.DspFaust"
  	sed -i "s/com.DspFaust/$PACKAGENAME/g" $JAVAFOLDER/*.java
      fi
      cp -r /usr/local/share/faust/api-allen/plugin/DspFaust.h $CPPFOLDER
      cp -r /usr/local/share/faust/api-allen/plugin/android/jni/java_interface_wrap.cpp $CPPFOLDER
      if [ "$OSCCTRL" = "1" ]; then
      faust $OPTIONS -i -a api-allen/plugin/DspFaust.cpp "$FILE" -o "$CPPFOLDER/DspFaust.cpp" || exit
      echo "#define OSCCTRL 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
      if [ "$OSCMODE" = "2" ]; then
      echo "#define OSCALIAS 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
      elif [ "$OSCMODE" = "1" ]; then
      echo "#define OSCALL 1" | cat - "$CPPFOLDER/DspFaust.cpp" > temp && mv temp "$CPPFOLDER/DspFaust.cpp"
      fi
      else
      faust $OPTIONS -i -a api-allen/plugin/DspFaust.cpp "$FILE" -o "$CPPFOLDER/DspFaust.cpp" || exit
      fi

elif [ $IOS -eq 1 ]; then
    echo "Your dsp-faust.zip API package for iOS is being created"
    cp -r /usr/local/share/faust/api-allen/simple/DspFaust.h $APIFOLDER

    if [ "$OSCCTRL" = "1" ]; then
    faust $OPTIONS -i -a api-allen/simple/DspFaust.cpp "$FILE" -o "$APIFOLDER/DspFaust.cpp" || exit
    echo "#define OSCCTRL 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$OSCMODE" = "2" ]; then
    echo "#define OSCALIAS 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    elif [ "$OSCMODE" = "1" ]; then
    echo "#define OSCALL 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    echo "#define IOS_DRIVER 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    echo "#define TARGET_OS_IPHONE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$SOUNDFILE" = "1" ]; then
  echo "#define SOUNDFILE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    if [ "$MIDI" = "1" ]; then
	  echo "#define IOS_MIDI_SUPPORT 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    else
      faust $OPTIONS -i -a api-allen/simple/DspFaust.cpp "$FILE" -o "$APIFOLDER/DspFaust.cpp" || exit
    echo "#define IOS_DRIVER 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    echo "#define TARGET_OS_IPHONE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$SOUNDFILE" = "1" ]; then
  echo "#define SOUNDFILE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    if [ "$POLY2" = "1" ]; then
	faust $OPTIONS -i -cn effect -a minimal-effect.cpp $EFFECT | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp" || exit
	echo "#define POLY2 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    if [ "$NVOICES" -gt "0" ]; then
	echo "#define NVOICES $NVOICES" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    if [ "$MIDI" = "1" ]; then
	echo "#define IOS_MIDI_SUPPORT 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    fi

elif [ $IOSMOTION -eq 1 ]; then
    echo "Your dsp-faust.zip API package for iOS-MOTION is being created"
    cp -r /usr/local/share/faust/api-allen/motion/DspFaust.h $APIFOLDER
    echo "#include <string>" | cat - "$APIFOLDER/DspFaust.h" > temp && mv temp "$APIFOLDER/DspFaust.h"
    echo "#include <vector>" | cat - "$APIFOLDER/DspFaust.h" > temp && mv temp "$APIFOLDER/DspFaust.h"
    if [ "$OSCCTRL" = "1" ]; then
    faust $OPTIONS -i -a api-allen/motion/DspFaust.cpp "$FILE" -o "$APIFOLDER/DspFaust.cpp" || exit
    echo "#define OSCCTRL 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$OSCMODE" = "2" ]; then
    echo "#define OSCALIAS 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    elif [ "$OSCMODE" = "1" ]; then
    echo "#define OSCALL 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    echo "#define IOS_DRIVER 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    echo "#define TARGET_OS_IPHONE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$SOUNDFILE" = "1" ]; then
  echo "#define SOUNDFILE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    if [ "$MIDI" = "1" ]; then
	  echo "#define IOS_MIDI_SUPPORT 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    else
      faust $OPTIONS -i -a api-allen/motion/DspFaust.cpp "$FILE" -o "$APIFOLDER/DspFaust.cpp" || exit
    echo "#define IOS_DRIVER 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    echo "#define TARGET_OS_IPHONE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$SOUNDFILE" = "1" ]; then
  echo "#define SOUNDFILE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    if [ "$MIDI" = "1" ]; then
	  echo "#define IOS_MIDI_SUPPORT 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    fi

elif [ $IOSPLUGIN -eq 1 ]; then
    echo "Your dsp-faust.zip API package for iOS-PLUGIN is being created"
    cp -r /usr/local/share/faust/api-allen/plugin/DspFaust.h $APIFOLDER
    if [ "$OSCCTRL" = "1" ]; then
    faust $OPTIONS -i -a api-allen/plugin/DspFaust.cpp "$FILE" -o "$APIFOLDER/DspFaust.cpp" || exit
    echo "#define OSCCTRL 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$OSCMODE" = "2" ]; then
    echo "#define OSCALIAS 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    elif [ "$OSCMODE" = "1" ]; then
    echo "#define OSCALL 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    echo "#define IOS_DRIVER 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    echo "#define TARGET_OS_IPHONE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$SOUNDFILE" = "1" ]; then
  echo "#define SOUNDFILE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    else
      faust $OPTIONS -i -a api-allen/plugin/DspFaust.cpp "$FILE" -o "$APIFOLDER/DspFaust.cpp" || exit
    echo "#define IOS_DRIVER 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    echo "#define TARGET_OS_IPHONE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    if [ "$SOUNDFILE" = "1" ]; then
  echo "#define SOUNDFILE 1" | cat - "$APIFOLDER/DspFaust.cpp" > temp && mv temp "$APIFOLDER/DspFaust.cpp"
    fi
    fi
else
    echoHelp
    exit 1
fi

###################################
# GENERATING API DOCUMENTATION
###################################

if [ $NODOC -eq 0 ]; then
	if [ $ANDROID -eq 1 ]; then
		DOCHEADERFILE="/usr/local/share/faust/api-allen/doc/Android.md"
		APIHEADERFILE="/usr/local/share/faust/api-allen/simple/DspFaust.h"
  elif [ $ANDROIDMOTION -eq 1 ]; then
  		DOCHEADERFILE="/usr/local/share/faust/api-allen/doc/Android.md"
  		APIHEADERFILE="/usr/local/share/faust/api-allen/motion/DspFaust.h"
  elif [ $ANDROIDPLUGIN -eq 1 ]; then
    	DOCHEADERFILE="/usr/local/share/faust/api-allen/doc/Android.md"
    	APIHEADERFILE="/usr/local/share/faust/api-allen/plugin/DspFaust.h"
	elif [ $IOS -eq 1 ]; then
		DOCHEADERFILE="/usr/local/share/faust/api-allen/doc/iOS.md"
		APIHEADERFILE="/usr/local/share/faust/api-allen/simple/DspFaust.h"
	elif [ $IOSMOTION -eq 1 ]; then
		DOCHEADERFILE="/usr/local/share/faust/api-allen/doc/iOS.md"
		APIHEADERFILE="/usr/local/share/faust/api-allen/motion/DspFaust.h"
  elif [ $IOSPLUGIN -eq 1 ]; then
		DOCHEADERFILE="/usr/local/share/faust/api-allen/doc/iOS.md"
		APIHEADERFILE="/usr/local/share/faust/api-allen/plugin/DspFaust.h"
	fi

	PPFILE=pPrinter.cpp
	PPBINARY=pp
	READMEFILE="$APIFOLDER/README.md"

	CXXFLAGS=$MYGCCFLAGS
	MYGCCFLAGS="-O3"
	CXX=g++
	CXXFLAGS=$MYGCCFLAGS

	faust $OPTIONS -i -a path-printer.cpp "$FILE" -o "$PPFILE" || exit
	if [ "$POLY2" = "1" ]; then
		faust $OPTIONS -i -cn effect -a minimal-effect.cpp $EFFECT | cat - "$PPFILE" > temp && mv temp "$PPFILE" || exit
		echo "#define POLY2 1" | cat - "$PPFILE" > temp && mv temp "$PPFILE"
	fi
	if [ "$NVOICES" -gt "0" ]; then
		echo "#define NVOICES $NVOICES" | cat - "$PPFILE" > temp && mv temp "$PPFILE"
	fi
  if [ "$SOUNDFILE" = "1" ]; then
      echo "#define SOUNDFILE 1" | cat - "$PPFILE"  > temp && mv temp "$PPFILE"
  fi

	# compile c++ to binary
	(
		$CXX $CXXFLAGS "$PPFILE" -o "$PPBINARY"
	) > /dev/null || exit
	rm "$PPFILE" || exit

	cp "$DOCHEADERFILE"  "$READMEFILE" || exit
	./"$PPBINARY" | cat "$READMEFILE" - > temp && mv temp "$READMEFILE" || exit
	rm "$PPBINARY" || exit

	faust2md "$APIHEADERFILE"  | cat "$READMEFILE" - > temp && mv temp "$READMEFILE" || exit
fi

###################################
# POST PROCESSING
###################################

ZIPOUT="$APIFOLDER.zip"

rm $ZIPOUT 2> /dev/null || true
zip -r $ZIPOUT $APIFOLDER > /dev/null || exit
rm -r $APIFOLDER || exit
